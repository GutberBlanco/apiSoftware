openapi: 3.0.1
info:
  title: Api Bot MetalCorp
  description: Esta API se encarga del manejo de informacion de la base da datos de la empresa Metalcorp.
  version: 1.0.0
servers:
  - url: https://api.metalcorp/v1/
tags:
  - name: Usuarios
    description: Este endpoint se encarga en todo lo relacionado con la informacion de los usuarios.
  - name: Reservas
    description: Este endpoint se encarga en todo lo relacionado con la reserva de productos.
  - name: Sucursales
    description: Este endpoint se encarga en todo lo relacionado con la información de las sucursales.
  - name: Productos
    description: Este endpoint se encarga en todo lo relacionado con la información de las sucursales.
  - name: Login clientes
    description: Este enpoint se encarga en todo lo relacionado con el acceso al cliente

paths:
  /users/auth:
    post:
      tags:
        - Usuarios
      summary: Verifica la informacion del usuario que desea iniciar sesion.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthUsersPost'
        required: true
      responses:
        200:
          description: (OK) Exito en el acceso del usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExitoLogin'
        401:
          description: No hay autorización para llamar al servicio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatosIncorrectos'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          description: No se encontro la información
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/UsuarioInexistente"
        500:
          $ref: '#/components/responses/ServerError'

  /users/{userId}/image:
    get:
      tags:
        - Usuarios
      summary: Devuelve la imagen del usuario dado su id.
      parameters:
        - $ref: '#/components/parameters/token'
        - name: userId
          in: path
          description: "El id del usuario del que se dese obtener la imagen"
          required: true
          schema:
            type: integer
            additionalProperties: false
            format: int64

      responses:
        200:
          description: (OK) Se obtuvo la imagen correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserImage'
        401:
          description: No hay autorización para llamar al servicio
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          description: No se encontro ninguna imagen
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImagenGeneral"
        500:
          $ref: '#/components/responses/ServerError'

  /users/{userId}/Product:
    post:
      tags:
        - Usuarios
      summary: Inserta un nuevo producto a la base de datos.
      parameters:
        - $ref: '#/components/parameters/token'
        - name: userId
          in: path
          description: "El id del usuario que va a registrar el producto"
          required: true
          schema:
            type: integer
            additionalProperties: false
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BodyProductPost'
        required: true
      responses:
        200:
          description: (OK) El producto se guardo correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExitoProducto'
        401:
          $ref: '#/components/responses/unauthorized'
        400:
          description: Solicitud Incorrecta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatosIncorrectosProducto'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'


  /autenticación:
    post:
      tags:
        - Login clientes
      summary: Acceso a la aplicacion.
      parameters:
        - $ref: '#/components/parameters/jmUsuario'
        - $ref: '#/components/parameters/jmContrasena'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jmUsuarioPost'
        required: true
      responses:
        200:
          description: Ingresa satisfactoriamente al Menu Principal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exito'

        400:
          $ref: '#/components/responses/NoAutorizado'
        401:
          $ref: '#/components/responses/NoEncontrado'
        404:
          $ref: '#/components/responses/AccesoIncorrecto'
        500:
          $ref: '#/components/responses/ErrorServidor'

  /cliente/{idusuario}-:
    get:
      tags:
        - Login clientes
      summary: obtiene el usuario y contraseña del cliente para acceder rápidamente.
      parameters:
        - name: idusuario
          in: path
          description: Obtiene el id de la Base de Datos y llena los espacios de Usuario y Contraseña
          required: true
          schema:
            type: string

      responses:
        200:
          description: Ingresa satisfactoriamente al Menu Principal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exito'
        401:
          $ref: '#/components/responses/NoEncontrado'
        500:
          $ref: '#/components/responses/ErrorServidor'
  /Carnet_Celular:
    post:
      tags:
        - Login clientes
      summary: Inserta su carnet y celular para recuperar su contraseña y usuario
      parameters:
        - $ref: '#/components/parameters/jmnuevaContrasenaCarnet'
        - $ref: '#/components/parameters/jmnuevaContrasenaCelular'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jmrecuperaPost'
        required: true
      responses:
        200:
          description: Ingresa satisfactoriamente al Menu Principal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exito'

        400:
          $ref: '#/components/responses/NoAutorizado'
        401:
          $ref: '#/components/responses/NoEncontrado'
        404:
          $ref: '#/components/responses/AccesoIncorrecto'
        500:
          $ref: '#/components/responses/ErrorServidor'

  /cliente/{carnet},{celular}:
    get:
      tags:
        - Login clientes
      summary: Obtiene el carnet del usuario para verificar si el cliente estuvo registrado.
      parameters:
        - name: carnet
          in: path
          description: Obtiene el carnet
          required: true
          schema:
            type: integer
        - name: celular
          in: path
          description: Obtiene el numero celular
          required: true
          schema:
            type: integer

      responses:
        200:
          description: Ingresa satisfactoriamente al Menu Principal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exito'

        400:
          $ref: '#/components/responses/NoAutorizado'
        401:
          $ref: '#/components/responses/NoEncontradoUsuario'
        404:
          $ref: '#/components/responses/UsuarioIncorrecto'
        500:
          $ref: '#/components/responses/ErrorServidor'

  /nuevacontraseña:
    post:
      tags:
        - Login clientes
      summary: Inserta dos veces la nueva contraseña
      parameters:
        - $ref: '#/components/parameters/jmnuevaContrasena1'
        - $ref: '#/components/parameters/jmnuevaContrasena2'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jmnuevacontrasenaPost'
        required: true
      responses:
        200:
          description: Ingresa satisfactoriamente al Menu Principal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exito'

        400:
          $ref: '#/components/responses/NoAutorizado'
        401:
          $ref: '#/components/responses/NoEncontrado'
        404:
          $ref: '#/components/responses/AccesoIncorrecto'
        500:
          $ref: '#/components/responses/ErrorServidor'

  /contraseña:
    put:
      tags:
        - Login clientes
      summary: Actualiza contraseña
      # parameters:
      #- $ref: '#/components/parameters/jmnuevaContrasena1'
      #- $ref: '#/components/parameters/jmnuevaContrasena2'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jmrecuperaPut'
        required: true
      responses:
        200:
          description: Ingresa satisfactoriamente al Menu Principal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exito'

        400:
          $ref: '#/components/responses/NoAutorizado'
        401:
          $ref: '#/components/responses/NoEncontrado'
        404:
          $ref: '#/components/responses/AccesoIncorrecto'
        500:
          $ref: '#/components/responses/ErrorServidor'

  /NuevoUsuario:
    post:
      tags:
        - Login clientes
      summary: Inserta una nueva reserva a la base de datos.
      parameters:
        - $ref: '#/components/parameters/token'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jmNuevoUsuario'
        required: true
      responses:
        200:
          description: (OK) La reserva se guardo correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exito'
        401:
          $ref: '#/components/responses/unauthorized'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /cliente/{idusuario}:
    get:
      tags:
        - Login clientes
      summary: obtiene los datos del cliente de la base de datos.
      parameters:
        - name: idusuario
          in: path
          description: Obtiene el id de la Base de Datos
          required: true
          schema:
            type: string

      responses:
        200:
          description: Obtiene satisfactoriamente los datos del cliente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jmDatos'

        500:
          $ref: '#/components/responses/ErrorServidor'

  /datosUsuario:
    put:
      tags:
        - Login clientes
      summary: Actualiza los datos del usuario
      # parameters:
      #- $ref: '#/components/parameters/jmnuevaContrasena1'
      #- $ref: '#/components/parameters/jmnuevaContrasena2'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jmDatos'
        required: true
      responses:
        200:
          description: Ingresa satisfactoriamente al Menu Principal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exito'

        400:
          $ref: '#/components/responses/NoAutorizado'
        401:
          $ref: '#/components/responses/NoEncontrado'
        404:
          $ref: '#/components/responses/AccesoIncorrecto'
        500:
          $ref: '#/components/responses/ErrorServidor'


  /reserves:
    post:
      tags:
        - Reservas
      summary: Inserta una nueva reserva a la base de datos.
      parameters:
        - $ref: '#/components/parameters/token'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BodyReservasPost'
        required: true
      responses:
        200:
          description: (OK) La reserva se guardo correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exito'
        401:
          $ref: '#/components/responses/unauthorized'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /products:
    get:
      tags:
        - Productos
      summary: Obtiene los datos de todos los productos.
      parameters:
        - $ref: '#/components/parameters/token'

      responses:
        200:
          description: (OK) Solicitud procesada correctamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsList'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /products/:
    get:
      tags:
        - Productos
      summary: Obtiene los datos de un producto mediante el nombre
      parameters:
        - $ref: '#/components/parameters/token'
        - in: query
          name: name
          schema:
            type: integer
          description: el nombre del producto a buscar
        - in: query
          name: pagesize
          schema:
            type: integer
          description: El tamaño de elementos
        - in: query
          name: pagenumber
          schema:
            type: integer
          description: el numero de pagina
          

      responses:
        200:
          description: (OK) Solicitud procesada correctamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Productsre'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /subsidiaries:
    get:
      tags:
        - Sucursales
      summary: Obtiene la lista de sucursales de la empresa
      parameters:
        - $ref: '#/components/parameters/token'

      responses:
        200:
          description: (OK) Solicitud procesada correctamente.
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Subsidiaries"
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

components:
  responses:
    unauthorized:
      description: No hay autorización para llamar al servicio
    NotFound:
      description: No se encontro la información
    ServerError:
      description: Error del servidor
    SaveCorrectReserve:
      description: La reserva se guardo correctamente
    GetCorrectProducts:
      description: La información del producto se obtuvo correctamente
    BadRequest:
      description: Solicitud Incorrecta

    NoAutorizado:
      description: No hay autorización para llamar al servicio
    NoEncontrado:
      description: Usuario o contraseña incorrectas
    ErrorServidor:
      description: Error del servidor comuniquese con Sistemas
    AccesoIncorrecto:
      description: Usuario no encontrado o no registrado

    NoEncontradoUsuario:
      description: Carnet o celular incorrectos
    UsuarioIncorrecto:
      description: carnet no encontrado o no registrado



  parameters:
    jmnuevaContrasenaCarnet:
      name: carnet
      in: query
      description: carnet con el que fue registrado.
      required: true
      schema:
        type: integer
    jmnuevaContrasenaCelular:
      name: Celular
      in: query
      description: Celular con el que fue registrado.
      required: true
      schema:
        type: integer
    jmUsuario:
      name: Usuario
      in: header
      description: Nombre de Usuario con el que fue registrado.
      required: true
      schema:
        type: string
    jmContrasena:
      name: Contraseña
      in: query
      description: Contraseña con el que fue registrado.
      required: true
      schema:
        type: string

    jmnuevaContrasena1:
      name: contraseña
      in: query
      description: Ingresa una nueva contraseña
      required: true
      schema:
        type: string
    jmnuevaContrasena2:
      name: Repite contraseña
      in: query
      description: Ingresa una nueva contraseña
      required: true
      schema:
        type: string



    token:
      name: token
      in: header
      description: Token de autenticación.
      required: true
      schema:
        type: string

    Username:
      name: Username
      in: query
      description: El nombre del usuario.
      required: true
      schema:
        type: string

    Password:
      name: Password
      in: query
      description: La contraseña del usuario.
      required: true
      schema:
        type: string

    descripcion:
      name: description
      in: query
      description: Datos del producto.
      required: false
      schema:
        type: string



  schemas:

    AuthUsersPost:
      type: object
      properties:
        username:
          type: string
          description: nombre de usuario
          example: "TeddyAP"
        password:
          type: string
          description: contraseña de usuario
          example: "366854755aA"

    BodyProductPost:
      type: object
      properties:
        idUser:
          type: string
          description: Id del Usuario.
          example: "1"
        date:
          type: string
          format: date-time
          description: fecha y hora de registro del producto.
        product:
          type: "array"
          items:
            $ref: "#/components/schemas/Product"

    Product:
      type: object
      properties:
        nombre:
          type: string
          description: nombre del producto
          example: "Pintura Blanca"
        categoria:
          type: string
          description: categoria del producto
          example: "Pinturas"
        codigo:
          type: string
          description: codigo del producto
          example: "ABCD10"
        imagen:
          type: string
          description: imagen del producto
          example: "https://www.google.com/url?sa=i&url=https%3A%2F%2Fmatdecons.com%2Fproducto%2Fpinturas-monopol-de-18-ltrs%2F&psig=AOvVaw1whZVwTLGXYhrh3k-w7VuK&ust=1653491662424000&source=images&cd=vfe&ved=0CAkQjRxqFwoTCKCHtsy2-PcCFQAAAAAdAAAAABAD"
        stock:
          type: number
          description: cantidad del producto
          example: 20
        dimensiones:
          type: string
          description: cantidad del producto
          example:
        fabricante:
          type: string
          description: cantidad del producto
          example: "Monopol"
        precio:
          type: number
          description: precio del producto
          example: 13.5

    ProductsList:
      type: object
      properties:
        name:
          type: string
          description: nombre del producto
          example: "PINTURA BLANCA"
        code:
          type: string
          description: codigo del producto
          example: "ABXCD10"
        stock:
          type: number
          description: cantidad del producto
          example: 20
        price:
          type: number
          description: precio del producto
          example: 13.5
        image:
          type: string
          description: imagen del producto
          example: "https://www.google.com/url?sa=i&url=https%3A%2F%2Fmatdecons.com%2Fproducto%2Fpinturas-monopol-de-18-ltrs%2F&psig=AOvVaw1whZVwTLGXYhrh3k-w7VuK&ust=1653491662424000&source=images&cd=vfe&ved=0CAkQjRxqFwoTCKCHtsy2-PcCFQAAAAAdAAAAABAD"

    jmUsuarioPost:
      type: object
      properties:
        Usuario:
          type: string
          description: Nombre de Usuario del cliente
        Contraseña:
          type: string
          description: Contraseña del cliente

    jmrecuperaPost:
      type: object
      properties:
        carnet:
          type: integer
          description: usuario cliente
        Celular:
          type: integer
          description: contraseña cliente

    jmrecuperaPut:
      type: object
      properties:
        Usuario:
          type: string
          description: usuario cliente
        ContrasenaNueva:
          type: string
          description: contraseña cliente

    jmnuevacontrasenaPost:
      type: object
      properties:
        nuevacontraseña:
          type: string
          description: Ingresa la nueva contraseña
        repitecontraseña:
          type: string
          description: repite nueva contraseña

    jmNuevoUsuario:
      type: object
      properties:
        products:
          type: "array"
          items:
            $ref: "#/components/schemas/jmlNuevoUsuario"

    jmlNuevoUsuario:
      type: object
      properties:
        Carnet:
          type: integer
          description: carnet cliente
        Nombre:
          type: string
          description: Nombre
        Apellido:
          type: string
          description: Apellido
        Celular:
          type: integer
          description: celular
        Usuario:
          type: string
          description: nombre de usuario
        Contraseña:
          type: string
          description: contraseña
        Repite contraseña:
          type: string
          description: repite contraseña
    jmDatos:
      type: object
      properties:
        carnet:
          type: integer
          description: carnet
        nombre:
          type: string
          description: nombre
        apellido:
          type: string
          description: apellido
        celular:
          type: integer
          description: celular
        Usuario:
          type: string
          description: usuario

    UserImage:
      type: object
      properties:
        respuesta:
          type: string
          example: "https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.nobbot.com%2Ftecnologia%2Fguia-y-trucos%2Ffotos-para-perfil-de-whatsapp%2F&psig=AOvVaw2qjFZFvbfuMgO2rG-BNtU-&ust=1653492106133000&source=images&cd=vfe&ved=0CAkQjRxqFwoTCNCl7KG4-PcCFQAAAAAdAAAAABAD"
          description: Bandera que indica si la llamada fue exitosa.

    ImagenGeneral:
      type: object
      properties:
        respuesta:
          type: string
          example: "https://www.google.com/url?sa=i&url=https%3A%2F%2Fes.123rf.com%2Fclipart-vectorizado%2Ficono_perfil.html&psig=AOvVaw2qjFZFvbfuMgO2rG-BNtU-&ust=1653492106133000&source=images&cd=vfe&ved=0CAkQjRxqFwoTCNCl7KG4-PcCFQAAAAAdAAAAABAU"

    ExitoLogin:
      type: object
      properties:
        id:
          type: integer
          enum: [1]
          description: id del usuario.
        nombreUsuario:
          type: string
          example: "Teddy Aruquipa Peralta"
          description: nombre del usuario.

    ExitoProducto:
      type: object
      properties:
        respuesta:
          type: string
          example: "Success"
          description: Bandera que indica si la llamada fue exitosa.

    DatosIncorrectos:
      type: object
      properties:
        message:
          type: string
          example: "Usuario y/o contraseña incorrectos, por favor revise los datos ingresados"
          description: mensaje.

    DatosIncorrectosProducto:
      type: object
      properties:
        message:
          type: string
          example: "Debe ingresar todos los campos obligatorios"
          description: mensaje.

    UsuarioInexistente:
      type: object
      properties:
        message:
          type: string
          example: "Usuario no registrado"
          description: mensaje.

    BodyReservasPost:
      type: object
      properties:
        idcliente:
          type: number
          description: Id del cliente
          example: 1
        subsidiary:
          type: number
          description: id de la sucursal
          example: 2
        products:
          type: "array"
          items:
            $ref: "#/components/schemas/Products"

        date: 
          type: string
          format: date
          description: fecha para el recojo de la reserva

    Products:
      type: object
      properties:
        id_product:
          type: number
          description: cantidad del producto
          example: 2
        stock:
          type: number
          description: cantidad del producto
          example: 3


    Productsre:
      type: object
      properties:
        id:
          type: number
          description: nombre del producto
          example: 3
        name:
          type: string
          description: nombre del producto
          example: Pintura Blanca Monopol Exterior
        detail:
          type: string
          description: detalles del producto
        stock:
          type: number
          description: cantidad del producto
          example: 12
        price:
          type: number
          description: precio del producto
          example: 15.5


    Subsidiaries:
      type: object
      properties:
        id:
          type: number
          description: id de la sucursal
          example: 2
        name:
          type: string
          description: nombre de la sucursal
          example: Central
        location:
          type: string
          description: ubicacion de la sucursal
          example: Av. Panamericana No 3234
        timetable:
          type: string
          description: horarios de atención de la sucursal
          example: Lun-Sab, 08:00-16:00
        number:
          type: number
          description: número de telefono de la sucursal
          example: 78946134

    Exito:
      type: object
      properties:
        respuesta:
          type: integer
          enum: [1]
          description: Bandera que indica si la llamada fue exitosa.